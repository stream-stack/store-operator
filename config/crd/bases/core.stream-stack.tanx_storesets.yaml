---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: storesets.core.stream-stack.tanx
spec:
  group: core.stream-stack.tanx
  names:
    kind: StoreSet
    listKind: StoreSetList
    plural: storesets
    singular: storeset
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: StoreSet is the Schema for the storesets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StoreSetSpec defines the desired state of StoreSet
            properties:
              store:
                properties:
                  image:
                    type: string
                  port:
                    type: string
                  replicas:
                    format: int32
                    type: integer
                type: object
              volume:
                properties:
                  capacity:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  nodeAffinity:
                    description: VolumeNodeAffinity defines constraints that limit
                      what nodes this volume can be accessed from.
                    properties:
                      required:
                        description: Required specifies hard node constraints that
                          must be met.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                    type: object
                  source:
                    description: Local represents directly-attached storage with node
                      affinity (Beta feature)
                    properties:
                      fsType:
                        description: Filesystem type to mount. It applies only when
                          the Path is a block device. Must be a filesystem type supported
                          by the host operating system. Ex. "ext4", "xfs", "ntfs".
                          The default value is to auto-select a filesystem if unspecified.
                        type: string
                      path:
                        description: The full path to the volume on the node. It can
                          be either a directory or block device (disk, partition,
                          ...).
                        type: string
                    required:
                    - path
                    type: object
                required:
                - capacity
                type: object
            type: object
          status:
            description: StoreSetStatus defines the observed state of StoreSet
            properties:
              status:
                type: string
              store:
                properties:
                  service:
                    description: ServiceStatus represents the current status of a
                      service.
                    properties:
                      conditions:
                        description: Current service state
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - type
                        x-kubernetes-list-type: map
                      loadBalancer:
                        description: LoadBalancer contains the current status of the
                          load-balancer, if one is present.
                        properties:
                          ingress:
                            description: Ingress is a list containing ingress points
                              for the load-balancer. Traffic intended for the service
                              should be sent to these ingress points.
                            items:
                              description: 'LoadBalancerIngress represents the status
                                of a load-balancer ingress point: traffic intended
                                for the service should be sent to an ingress point.'
                              properties:
                                hostname:
                                  description: Hostname is set for load-balancer ingress
                                    points that are DNS based (typically AWS load-balancers)
                                  type: string
                                ip:
                                  description: IP is set for load-balancer ingress
                                    points that are IP based (typically GCE or OpenStack
                                    load-balancers)
                                  type: string
                                ports:
                                  description: Ports is a list of records of service
                                    ports If used, every port defined in the service
                                    should have an entry in it
                                  items:
                                    properties:
                                      error:
                                        description: 'Error is to record the problem
                                          with the service port The format of the
                                          error shall comply with the following rules:
                                          - built-in error values shall be specified
                                          in this file and those shall use CamelCase
                                          names - cloud provider specific error values
                                          must have names that comply with the format
                                          foo.example.com/CamelCase. --- The regex
                                          it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                        maxLength: 316
                                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                        type: string
                                      port:
                                        description: Port is the port number of the
                                          service port of which status is recorded
                                          here
                                        format: int32
                                        type: integer
                                      protocol:
                                        default: TCP
                                        description: 'Protocol is the protocol of
                                          the service port of which status is recorded
                                          here The supported values are: "TCP", "UDP",
                                          "SCTP"'
                                        type: string
                                    required:
                                    - port
                                    - protocol
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            type: array
                        type: object
                    type: object
                  serviceName:
                    type: string
                  workload:
                    description: StatefulSetStatus represents the current state of
                      a StatefulSet.
                    properties:
                      availableReplicas:
                        description: Total number of available pods (ready for at
                          least minReadySeconds) targeted by this statefulset. This
                          is a beta field and enabled/disabled by StatefulSetMinReadySeconds
                          feature gate.
                        format: int32
                        type: integer
                      collisionCount:
                        description: collisionCount is the count of hash collisions
                          for the StatefulSet. The StatefulSet controller uses this
                          field as a collision avoidance mechanism when it needs to
                          create the name for the newest ControllerRevision.
                        format: int32
                        type: integer
                      conditions:
                        description: Represents the latest available observations
                          of a statefulset's current state.
                        items:
                          description: StatefulSetCondition describes the state of
                            a statefulset at a certain point.
                          properties:
                            lastTransitionTime:
                              description: Last time the condition transitioned from
                                one status to another.
                              format: date-time
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of statefulset condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      currentReplicas:
                        description: currentReplicas is the number of Pods created
                          by the StatefulSet controller from the StatefulSet version
                          indicated by currentRevision.
                        format: int32
                        type: integer
                      currentRevision:
                        description: currentRevision, if not empty, indicates the
                          version of the StatefulSet used to generate Pods in the
                          sequence [0,currentReplicas).
                        type: string
                      observedGeneration:
                        description: observedGeneration is the most recent generation
                          observed for this StatefulSet. It corresponds to the StatefulSet's
                          generation, which is updated on mutation by the API Server.
                        format: int64
                        type: integer
                      readyReplicas:
                        description: readyReplicas is the number of pods created for
                          this StatefulSet with a Ready Condition.
                        format: int32
                        type: integer
                      replicas:
                        description: replicas is the number of Pods created by the
                          StatefulSet controller.
                        format: int32
                        type: integer
                      updateRevision:
                        description: updateRevision, if not empty, indicates the version
                          of the StatefulSet used to generate Pods in the sequence
                          [replicas-updatedReplicas,replicas)
                        type: string
                      updatedReplicas:
                        description: updatedReplicas is the number of Pods created
                          by the StatefulSet controller from the StatefulSet version
                          indicated by updateRevision.
                        format: int32
                        type: integer
                    required:
                    - availableReplicas
                    - replicas
                    type: object
                  workloadName:
                    type: string
                required:
                - service
                - serviceName
                - workload
                - workloadName
                type: object
              volume:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                properties:
                  message:
                    description: A human-readable message indicating details about
                      why the volume is in this state.
                    type: string
                  name:
                    type: string
                  phase:
                    description: 'Phase indicates if a volume is available, bound
                      to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase'
                    type: string
                  reason:
                    description: Reason is a brief CamelCase string that describes
                      any failure and is meant for machine parsing and tidy display
                      in the CLI.
                    type: string
                required:
                - name
                type: object
            required:
            - status
            - store
            - volume
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
