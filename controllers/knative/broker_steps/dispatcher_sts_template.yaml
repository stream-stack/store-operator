apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ GetDispatcherStsName .}}
  namespace: {{ .ObjectMeta.Namespace }}
  labels:
    module: dispatcher
    broker: {{ .ObjectMeta.Name }}
{{range $key,$value := .ObjectMeta.Labels}}
    {{$key}}: {{$value -}}
{{end}}
spec:
  serviceName: {{ GetDispatcherStsName .}}
  replicas: {{ .Spec.Dispatcher.Replicas}}
  selector:
    matchLabels:
      module: dispatcher
      broker: {{ .ObjectMeta.Name }}
{{range $key,$value := .ObjectMeta.Labels}}
      {{$key}}: {{$value -}}
{{end}}
  template:
    metadata:
      labels:
        module: dispatcher
        broker: {{ .ObjectMeta.Name }}
{{range $key,$value := .ObjectMeta.Labels}}
        {{$key}}: {{$value -}}
{{end}}
    spec:
      containers:
        - name: dispatcher
          image: {{ .Spec.Dispatcher.Image }}
          ports:
            - containerPort: 80
              name: http-cloudevent
            - containerPort: {{ GetPublisherContainerPort }}
              name: grpc-manager
          env:
            - name: STREAM_NAME
              value: "{{ GetStreamName . }}"
          livenessProbe:
            httpGet:
              path: /health
              port: {{ GetPublisherContainerPort }}
            initialDelaySeconds: 3
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: {{ GetPublisherContainerPort }}
            initialDelaySeconds: 3
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
#          command:
#            - './dispatcher'
#          workingDir: '/'
#          args:
#            - '--Address='