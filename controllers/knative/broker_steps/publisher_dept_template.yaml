apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ GetPublisherName .}}
  namespace: {{ .ObjectMeta.Namespace }}
  labels:
    module: publisher
    broker: {{ .ObjectMeta.Name -}}
{{range $key,$value := .ObjectMeta.Labels}}
    {{$key}}: {{$value -}}
{{end}}
spec:
  replicas: {{ .Spec.Publisher.Replicas}}
  selector:
    matchLabels:
      module: publisher
      broker: {{ .ObjectMeta.Name -}}
{{range $key,$value := .ObjectMeta.Labels}}
      {{$key}}: {{$value -}}
{{end}}
  template:
    metadata:
      labels:
        module: publisher
        broker: {{ .ObjectMeta.Name -}}
{{range $key,$value := .ObjectMeta.Labels}}
        {{$key}}: {{$value -}}
{{end}}
    spec:
      hostname: {{.ObjectMeta.Name}}-publisher
      serviceAccountName: {{ .ObjectMeta.Name }}
      containers:
        - name: publisher
          image: {{ .Spec.Publisher.Image }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: {{ GetPublisherManagerContainerPort }}
              name: http-manager
          livenessProbe:
            httpGet:
              path: /health
              port: {{ GetPublisherManagerContainerPort }}
            initialDelaySeconds: 3
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: {{ GetPublisherManagerContainerPort }}
            initialDelaySeconds: 3
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          command:
            - './publisher'
          workingDir: '/'
          args:
            - '--STREAM_NAME={{GetStreamName . }}'
            - '--SELECTOR={{GetSelector . }}'
            - '--BROKER={{ .ObjectMeta.Name -}}'